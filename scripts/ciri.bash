#!/bin/bash

##############################################################################
# Options:
#   -a input GTF/GFF formatted annotation file name (optional)
#   -i input SAM file name (required; generated by BWA-MEM)
#   -t number of threads (default: 1)
#   -o output (required)
#   -f FASTA reference genome.
#   -m max spanning distance (default: 200,000)
##############################################################################
while getopts ":a:i:t:o:f:m:" opt; do
  case $opt in
  a) GTF_FILE=$OPTARG ;;
  i) INPUT_SAM_FILE=$OPTARG ;;
  t) THREADS=$OPTARG ;;
  o) OUTPUT=$OPTARG ;;
  f) FASTA_FILE=$OPTARG ;;
  m) SPANNING=$OPTARG ;;
  \?)
    echo "Invalid option: -$OPTARG"
    exit 1
    ;;
  :)
    echo "Option -$OPTARG requires an argument."
    exit 2
    ;;
  esac
done

#### Check parameters ####
# Check GTF annotation files
if [ -z "$GTF_FILE" ] || [ ! -f "$GTF_FILE" ]; then
  echo "Annotation file does not exist!"
  exit 3
fi

# Check input files
if [ -z "$INPUT_SAM_FILE" ] || [ ! -f "$INPUT_SAM_FILE" ]; then
  echo "Input file does not exist!"
  exit 4
fi

# Check number of threads and set 1 as default value
if [ -z "$THREADS" ]; then
  THREADS=1
fi

# Check output
if [ -z "$OUTPUT" ]; then
  echo "Output file must be specified!"
  exit 6
fi

# Check if output directory is writable
if [ ! -w "$(dirname "$OUTPUT")" ]; then
  echo "Output directory is not writable!"
  exit 7
fi

# Check fasta file
if [ -z "$FASTA_FILE" ] || [ ! -f "$FASTA_FILE" ]; then
  echo "FASTA file does not exist!"
  exit 8
fi

# Check max spanning distance (default: 200,000)
if [ -z "$SPANNING" ]; then
  SPANNING=200000
fi

#### circRNA identification ####

if ! perl /usr/local/bin/CIRI.pl -I "$INPUT_SAM_FILE" -A "$GTF_FILE" -F "$FASTA_FILE" -S "$SPANNING" -O "$OUTPUT" -T $THREADS; then
  echo "CIRI returned non zero exit code!"
  exit 5
fi

# Check SAM file
if [ ! -f "$OUTPUT" ]; then
  echo "Unable to find CIRI output file!"
  exit 9
fi

chmod 777 "$OUTPUT"
